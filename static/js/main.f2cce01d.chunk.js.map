{"version":3,"sources":["api/pokeapi.js","components/SearchBar.js","components/PokeSelect.js","components/ImageCard.js","components/App.js","components/FrontPage.js","components/PokemonDetail.js","index.js"],"names":["axios","create","baseURL","SearchBar","onSubmit","setSearchUrl","setSubmit","useState","term","setTerm","onSearchSubmit","a","pokeapi","get","response","data","sprites","front_default","console","log","Form","e","preventDefault","onFormSubmit","Input","fluid","icon","size","className","placeholder","onChange","target","value","type","options","key","text","PokeSelect","props","onSelectChange","option","pokemonURL","pokemon_species_details","map","pokemon_species","name","offset","limit","pokeSelectUrlList","slice","getImageUrl","el","Promise","all","then","poke","result","pokeData","setPokeData","Dropdown","selection","change","ImageCard","Image","src","urls","centered","App","searchUrl","submit","responseCount","setResponseCount","pagecount","Math","ceil","navigate","useNavigate","getPokeImageUrl","PokeImageUrl","results","url","count","useEffect","replace","to","state","onPageChange","d","selected","pageCount","containerClassName","activeClassName","FrontPage","useLocation","Grid","columns","padded","index","Column","id","Card","Description","PokemonDetail","detail","setDetail","params","useParams","getDetail","Content","Header","List","Item","height","base_experience","types","ReactDOM","render","basename","process","path","element","document","querySelector"],"mappings":"sNAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,+B,yBC+BIC,EA9BG,SAAC,GAAuC,EAAtCC,SAAuC,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,UAC1C,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAKMC,EAAc,uCAAG,WAAMF,GAAN,eAAAG,EAAA,+EAEIC,EAAQC,IAAR,mBAAwBL,IAF5B,OAEbM,EAFa,OAGnBT,EAAaS,EAASC,KAAKC,QAAQC,eAHhB,gDAMnBC,QAAQC,IAAR,MANmB,QAQrBb,GAAU,GARW,yDAAH,sDAUpB,OACE,cAACc,EAAA,EAAD,CAAMhB,SAAU,SAACiB,GAAD,OAfG,SAAAA,GACnBA,EAAEC,iBACFZ,EAAeF,GAaQe,CAAaF,IAApC,SACE,cAACG,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLC,KAAK,MACLC,UAAU,SACVC,YAAY,kBACZC,SAAU,SAAAT,GAAC,OAAIZ,EAAQY,EAAEU,OAAOC,QAChCC,KAAK,Y,SCzBPC,EAAU,CACd,CAACC,IAAI,SAASC,KAAK,SAASJ,MAAM,GAClC,CAACG,IAAI,OAAOC,KAAK,OAAOJ,MAAM,GAC9B,CAACG,IAAI,aAAaC,KAAK,aAAaJ,MAAM,IAgC7BK,EA7BI,SAACC,GAClB,IAOMC,EAAc,uCAAG,WAAOC,GAAP,qBAAA7B,EAAA,6DACrBO,QAAQC,IAAI,SADS,SAEEP,EAAQC,IAAR,kBAAuB2B,EAAOR,QAFhC,OAEflB,EAFe,OAGf2B,EAAa3B,EAASC,KAAK2B,wBAAwBC,KAAI,SAACX,GAAD,gBAAYA,EAAMY,gBAAgBC,SAPzEC,EAQwB,EARjBC,EAQmB,GAA1CC,EAA6BP,EAPtBQ,MAAMH,EAAOC,EAAMD,EAAOC,EAAMA,GAQvCG,EAAcF,EAAkBL,IAAlB,uCAAsB,WAAMQ,GAAN,SAAAxC,EAAA,sEAAgBC,EAAQC,IAAR,mBAAwBsC,IAAxC,mFAAtB,uDACpBC,QAAQC,IAAIH,GACTI,MAAK,SAAAC,GAAI,OAAEA,EAAKZ,KAAI,SAAAa,GAAM,OAAEA,EAAOzC,WACnCuC,MAAK,SAAAG,GAAQ,OAAEnB,EAAMoB,YAAYD,MARf,iCAJN,IAAOX,EAAOC,IAIR,OAAH,sDAUpB,OACE,cAACY,EAAA,EAAD,CACE9B,YAAY,sBACZJ,OAAK,EACLmC,WAAS,EACT1B,QAASA,EACTJ,SAAU,SAACU,EAAOR,GAAR,OAvBC,SAACQ,GACdD,EAAeC,GAsBaqB,CAAO7B,O,SCvBxB8B,EARG,SAAAxB,GAChB,OACE,8BACE,cAACyB,EAAA,EAAD,CAAOC,IAAK1B,EAAM2B,KAAMC,UAAQ,O,2BCoDvBC,EAjDL,WACR,MAAkC5D,mBAAS,IAA3C,mBAAO6D,EAAP,KAAkB/D,EAAlB,KACA,EAA4BE,oBAAS,GAArC,mBAAO8D,EAAP,KAAe/D,EAAf,KACA,EAA0CC,mBAAS,GAAnD,mBAAO+D,EAAP,KAAsBC,EAAtB,KACA,EAA+BhE,qBAA/B,mBAAOkD,EAAP,KAAgBC,EAAhB,KAEMc,EAAYC,KAAKC,KAAKJ,EADd,IAEVK,EAAWC,cAMTC,EAAe,uCAAG,WAAO/B,EAAOC,GAAd,iBAAApC,EAAA,sEACCC,EAAQC,IAAR,0BAA+BiC,EAA/B,kBAA+CC,IADhD,OAChBjC,EADgB,OAEhBgE,EAAehE,EAASC,KAAKgE,QAAQpC,IAAtB,uCAA0B,WAAMQ,GAAN,SAAAxC,EAAA,sEAAgBC,EAAQC,IAAIsC,EAAG6B,KAA/B,mFAA1B,uDACrB5B,QAAQC,IAAIyB,GACTxB,MAAK,SAAAC,GAAI,OAAEA,EAAKZ,KAAI,SAAAa,GAAM,OAAEA,EAAOzC,WACnCuC,MAAK,SAAAG,GAAQ,OAAEC,EAAYD,MAC9Bc,EAAiBzD,EAASC,KAAKkE,OANT,2CAAH,wDAerB,OANAC,qBAAU,WACLb,GACDM,EAAS,UAAW,CAAEQ,SAAS,IAEjCN,EAAgB,EAAE,MAClB,CAACR,EAAOM,IAER,sBAAK/C,UAAU,eAAf,UACE,cAAC,EAAD,CAAWtB,UAAWA,EAAWD,aAAcA,IAC/C,cAAC,EAAD,CAAYqD,YAAaA,IACzB,cAAC,IAAD,CAAM0B,GAAE,aAAgBC,MAAO,CAAE5B,SAAUA,GAA3C,+BAIEY,GACE,cAAC,EAAD,CAAWJ,KAAMG,IAErB,cAAC,IAAD,IACA,cAAC,IAAD,CACEkB,aAhCkB,SAACC,GACvBV,EAA2B,GAAXU,EAAEC,SALN,KAqCRC,UAAWjB,EACXkB,mBAAoB,aACpBC,gBAAiB,e,2BCzBVC,EAvBG,SAAAtD,GAChB,IACQmB,EADSoC,cACaR,MAAtB5B,SACR,OACE,8BACE,cAACqC,EAAA,EAAD,CAAMC,QAAS,EAAGC,QAAM,EAAxB,SACGvC,GAAYA,EAASd,KAAI,SAACqB,EAAIiC,GAC7B,OACE,cAACH,EAAA,EAAKI,OAAN,UACE,cAAC,IAAD,CAAMd,GAAE,yBAAoBpB,EAAImC,IAAhC,SACA,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,CAAWnC,KAAMD,EAAIhD,QAAQC,gBAC3B,cAACmF,EAAA,EAAKC,YAAN,UAAmBrC,EAAInB,aAJXoD,W,SCoBfK,EA5BO,SAAAhE,GACpB,MAA4B/B,qBAA5B,mBAAOgG,EAAP,KAAeC,EAAf,KACIC,EAASC,cAQb,OAPAxB,qBAAW,YACM,uCAAG,4BAAAvE,EAAA,sEACGC,EAAQC,IAAR,kBAAuB4F,EAAOR,QADjC,OACVlF,EADU,OAEhByF,EAAUzF,GAFM,2CAAH,qDAIf4F,KACA,CAACF,IAED,eAACL,EAAA,EAAD,WACE,cAACrC,EAAA,EAAD,CAAOC,IAAG,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAQxF,KAAKC,QAAQC,cAAeU,KAAK,WACrD,eAACyE,EAAA,EAAKQ,QAAN,WAEA,cAACR,EAAA,EAAKS,OAAN,iBAAcN,QAAd,IAAcA,OAAd,EAAcA,EAAQxF,KAAK8B,OAC3B,cAACuD,EAAA,EAAKC,YAAN,UACE,eAACS,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,KAAN,4BAAmBR,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQxF,KAAKiG,UAChC,eAACF,EAAA,EAAKC,KAAN,qCAA4BR,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAQxF,KAAKkG,mBACzC,eAACH,EAAA,EAAKC,KAAN,2BAAkBR,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAQxF,KAAKmG,MAAMvE,KAAI,SAACV,EAAKgE,GAAN,OAAc,iCAAmBhE,EAAKA,KAAKY,KAA7B,MAAWoD,qBChB5EkB,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,WAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,aAIrCC,SAASC,cAAc,Y","file":"static/js/main.f2cce01d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://pokeapi.co/api/v2/',\n});\n","import React, { useState } from 'react';\r\nimport { Form, Input } from 'semantic-ui-react';\r\nimport pokeapi from '../api/pokeapi';\r\n\r\nconst SearchBar = ({onSubmit, setSearchUrl, setSubmit}) =>{\r\n  const [term,setTerm] = useState(\"\");\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    onSearchSubmit(term);\r\n  };\r\n  const onSearchSubmit = async term => {\r\n    try{\r\n      const response = await pokeapi.get(`/pokemon/${term}`);\r\n      setSearchUrl(response.data.sprites.front_default);\r\n    }\r\n    catch(error){\r\n      console.log(error)\r\n    }\r\n    setSubmit(true);\r\n  };\r\n  return(\r\n    <Form onSubmit={(e) => onFormSubmit(e)}>\r\n      <Input\r\n        fluid\r\n        icon=\"search\"\r\n        size=\"big\"\r\n        className=\"prompt\"\r\n        placeholder=\"Image Search...\"\r\n        onChange={e => setTerm(e.target.value)}\r\n        type='text'\r\n      />\r\n    </Form>\r\n  )\r\n}\r\nexport default SearchBar;","import React from 'react';\n//import Select from 'react-select';\nimport {Dropdown} from 'semantic-ui-react'; \nimport pokeapi from '../api/pokeapi';\nconst options = [\n  {key:'Female',text:'Female',value:1},\n  {key:'Male',text:'Male',value:2},\n  {key:'Genderless',text:'Genderless',value:3}\n];\n\nconst PokeSelect = (props)=>{\n  const change = (option)=>{\n    onSelectChange(option);\n  }\n  const paginate = (array,offset,limit) =>{\n    return array.slice(offset*limit,offset*limit+limit);\n  }\n  \n  const onSelectChange = async (option) =>{\n    console.log(\"hello\")\n    const response = await pokeapi.get(`/gender/${option.value}`);\n    const pokemonURL = response.data.pokemon_species_details.map((value)=>`${value.pokemon_species.name}`);\n    const pokeSelectUrlList = paginate(pokemonURL,0,10);\n    const getImageUrl = pokeSelectUrlList.map(async el=>await pokeapi.get(`/pokemon/${el}`));\n    Promise.all(getImageUrl)\n      .then(poke=>poke.map(result=>result.data))\n      .then(pokeData=>props.setPokeData(pokeData));\n  }\n  return (\n    <Dropdown\n      placeholder=\"Select Pokemon Type\"\n      fluid\n      selection\n      options={options} \n      onChange={(option,value)=>change(value,props)}\n    />\n  )\n}\n\nexport default PokeSelect;\n","import React from 'react';\nimport {Image} from 'semantic-ui-react';\n\nconst ImageCard = props=>{\n  return (\n    <div>\n      <Image src={props.urls} centered/>\n    </div>\n  )\n}\n\nexport default ImageCard;\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport pokeapi from '../api/pokeapi';\r\nimport SearchBar from './SearchBar';\r\nimport PokeSelect from './PokeSelect';\r\nimport ImageCard from './ImageCard';\r\nimport { Outlet, Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ReactPaginate from 'react-paginate';\r\nconst App=() => {\r\n  const [searchUrl, setSearchUrl] = useState(\"\");\r\n  const [submit, setSubmit] = useState(false);\r\n  const [responseCount, setResponseCount] = useState(0);\r\n  const [pokeData,setPokeData] = useState();//data storage from api\r\n  const limit = 10;\r\n  const pagecount = Math.ceil(responseCount/limit);\r\n  let navigate = useNavigate();\r\n\r\n  const handlePageClick = (d)=>{\r\n    getPokeImageUrl(d.selected*10,limit);\r\n  } \r\n\r\n  const getPokeImageUrl = async (offset,limit)=>{ // too many api request need redux\r\n    const response = await pokeapi.get(`/pokemon?offset=${offset}&limit=${limit}`);\r\n    const PokeImageUrl = response.data.results.map(async el=>await pokeapi.get(el.url));\r\n    Promise.all(PokeImageUrl)\r\n      .then(poke=>poke.map(result=>result.data))\r\n      .then(pokeData=>setPokeData(pokeData))\r\n    setResponseCount(response.data.count);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(submit) {\r\n      navigate('/Search', { replace: true });\r\n    }\r\n    getPokeImageUrl(0,10);\r\n  },[submit,navigate])\r\n  return (\r\n    <div className='ui container'>\r\n      <SearchBar setSubmit={setSubmit} setSearchUrl={setSearchUrl} />\r\n      <PokeSelect setPokeData={setPokeData} />\r\n      <Link to={`/Frontpage`} state={{ pokeData: pokeData }}>\r\n        View all Pokemons\r\n      </Link>\r\n      {\r\n        submit &&\r\n          <ImageCard urls={searchUrl}/>\r\n      }\r\n      <Outlet />\r\n      <ReactPaginate \r\n        onPageChange={handlePageClick}\r\n        pageCount={pagecount}\r\n        containerClassName={'pagination'}\r\n        activeClassName={'active'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import ImageCard from './ImageCard';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './styles/styles.css';\nimport {Grid,Card} from 'semantic-ui-react';\nconst FrontPage = props =>{\n  const location = useLocation();\n  const { pokeData } = location.state;\n  return (\n    <div>\n      <Grid columns={5} padded>\n        {pokeData && pokeData.map((src,index)=>{\n          return(\n            <Grid.Column key={index} >\n              <Link to={`/PokemonDetail/${src.id}`}>\n              <Card>\n                <ImageCard urls={src.sprites.front_default} />\n                  <Card.Description>{src.name}</Card.Description>\n                </Card>\n              </Link>\n            </Grid.Column>\n          )\n        })}\n      </Grid>\n    </div>\n  )\n};\n\nexport default FrontPage;\n","import React,{useState,useEffect} from 'react';\nimport {Image,Card,List} from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport pokeapi from '../api/pokeapi';\n\nconst PokemonDetail = props =>{\n  const [detail, setDetail] = useState();\n  let params = useParams();\n  useEffect (()=>{\n    const getDetail = async() => {\n      const data = await pokeapi.get(`pokemon/${params.index}`);\n      setDetail(data);\n    }\n    getDetail();\n  },[params])\n  return (\n    <Card>\n      <Image src={detail?.data.sprites.front_default} size='medium'/>\n      <Card.Content>\n\n      <Card.Header>{detail?.data.name}</Card.Header>\n      <Card.Description>\n        <List>\n          <List.Item>height:{detail?.data.height}</List.Item>\n          <List.Item>base experience:{detail?.data.base_experience}</List.Item>\n          <List.Item>types:{detail?.data.types.map((type,index)=><span key={index}>{type.type.name} </span>)}</List.Item>\n        </List>\n      </Card.Description> \n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default PokemonDetail;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport FrontPage from './components/FrontPage';\nimport ImageCard from './components/ImageCard';\nimport PokemonDetail from './components/PokemonDetail';\nimport { Route,Routes } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Routes>\n      <Route path=\"/\" element={<App />} >\n        <Route path=\"/FrontPage\" element={<FrontPage />} />\n        <Route path=\"/PokemonDetail/:index\" element={<PokemonDetail />} />\n        <Route path=\"/Search\" element={<ImageCard />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>, \n  document.querySelector('#root')\n);\n"],"sourceRoot":""}