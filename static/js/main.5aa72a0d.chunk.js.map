{"version":3,"sources":["api/pokeapi.js","components/SearchBar.js","components/PokeSelect.js","components/ImageCard.js","components/FrontPage.js","components/App.js","components/PokemonDetail.js","index.js"],"names":["axios","create","baseURL","SearchBar","onSubmit","useState","useSearchParams","setSearch","navigate","useNavigate","form","useForm","initialValues","term","onSearchSubmit","a","pokeapi","get","response","data","id","state","console","log","e","preventDefault","values","onFormSubmit","TextInput","type","placeholder","value","onChange","title","target","setFieldValue","currentTarget","options","key","text","PokeSelect","props","onSelectChange","option","pokemonURL","pokemon_species_details","map","pokemon_species","name","offset","limit","pokeSelectUrlList","slice","getImageUrl","el","Promise","all","then","poke","result","pokeData","setPokeData","Dropdown","fluid","selection","change","ImageCard","Image","src","urls","FrontPage","SimpleGrid","cols","index","to","Card","p","shadow","Section","sprites","front_default","Text","align","size","App","responseCount","setResponseCount","pagecount","Math","ceil","child","useOutlet","handlePageClick","d","getPokeImageUrl","selected","PokeImageUrl","results","url","count","useEffect","Container","Stack","Segment","Grid","Col","span","breakLabel","nextLabel","previousLabel","onPageChange","pageCount","containerClassName","activeClassName","pageRangeDisplayed","PokemonDetail","detail","setDetail","location","useLocation","getDetail","centered","Content","Header","Description","List","Item","height","base_experience","types","ReactDOM","render","basename","process","path","element","document","querySelector"],"mappings":"sNAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,+B,yBC6CIC,EAzCG,SAAC,GAAgB,EAAdC,SAAe,IAClC,EAAwBC,mBAAS,IAAjC,mBACA,GADA,UAC4BC,eAA5B,mBAAeC,GAAf,WACMC,EAAWC,cAOXC,EAAOC,YAAQ,CACnBC,cAAc,CACZC,KAAK,MAGHC,EAAc,uCAAG,WAAMD,GAAN,eAAAE,EAAA,+EAEIC,EAAQC,IAAR,mBAAwBJ,IAF5B,OAEbK,EAFa,OAGnBV,EAAS,kBAAD,OAAmBU,EAASC,KAAKC,IAAM,CAACC,MAAQ,CAAED,GAAIF,EAASC,KAAKC,MAHzD,gDAMnBE,QAAQC,IAAR,MANmB,yDAAH,sDAcpB,OACE,sBAAMnB,SAAU,SAACoB,GAAD,OAzBG,SAAAA,GACnBA,EAAEC,iBACFX,EAAeJ,EAAKgB,OAAOb,MAuBJc,CAAaH,IAApC,SACE,cAACI,EAAA,EAAD,CACE,aAAW,SACXC,KAAK,SACLC,YAAY,YACZC,MAAOrB,EAAKgB,OAAOb,KACnBmB,SAXe,SAAAR,GACnBjB,EAAU,CAAC0B,MAAOT,EAAEU,OAAOH,QAC3BrB,EAAKyB,cAAc,OAAQX,EAAEY,cAAcL,a,SC9BzCM,EAAU,CACd,CAACC,IAAI,SAASC,KAAK,SAASR,MAAM,GAClC,CAACO,IAAI,OAAOC,KAAK,OAAOR,MAAM,GAC9B,CAACO,IAAI,aAAaC,KAAK,aAAaR,MAAM,IA+B7BS,EA5BI,SAACC,GAClB,IAOMC,EAAc,uCAAG,WAAOC,GAAP,qBAAA5B,EAAA,sEACEC,EAAQC,IAAR,kBAAuB0B,EAAOZ,QADhC,OACfb,EADe,OAEf0B,EAAa1B,EAASC,KAAK0B,wBAAwBC,KAAI,SAACf,GAAD,gBAAYA,EAAMgB,gBAAgBC,SANzEC,EAOwB,EAPjBC,EAOmB,GAA1CC,EAA6BP,EANtBQ,MAAMH,EAAOC,EAAMD,EAAOC,EAAMA,GAOvCG,EAAcF,EAAkBL,IAAlB,uCAAsB,WAAMQ,GAAN,SAAAvC,EAAA,sEAAgBC,EAAQC,IAAR,mBAAwBqC,IAAxC,mFAAtB,uDACpBC,QAAQC,IAAIH,GACTI,MAAK,SAAAC,GAAI,OAAEA,EAAKZ,KAAI,SAAAa,GAAM,OAAEA,EAAOxC,WACnCsC,MAAK,SAAAG,GAAQ,OAAEnB,EAAMoB,YAAYD,MAPf,iCAJN,IAAOX,EAAOC,IAIR,OAAH,sDASpB,OACE,cAACY,EAAA,EAAD,CACEhC,YAAY,sBACZiC,OAAK,EACLC,WAAS,EACT3B,QAAUA,EACVL,SAAW,SAACW,EAAQZ,GAAT,OAtBA,SAACY,GACdD,EAAeC,GAqBiBsB,CAAOlC,O,wECrB5BmC,EARG,SAAAzB,GAChB,OACE,8BACE,cAAC0B,EAAA,EAAD,CAAOC,IAAK3B,EAAM4B,U,mCCiBTC,EAnBG,SAAA7B,GAChB,OACE,cAAC8B,EAAA,EAAD,CAAYC,KAAM,EAAlB,SACG/B,EAAMmB,UAAYnB,EAAMmB,SAASd,KAAI,SAACsB,EAAIK,GACzC,OACE,8BACE,cAAC,IAAD,CAAMC,GAAE,yBAAoBN,EAAIhD,IAAMC,MAAO,CAACD,GAAGgD,EAAIhD,IAArD,SACE,eAACuD,EAAA,EAAD,CAAMC,EAAE,KAAKC,OAAO,KAApB,UACE,cAACF,EAAA,EAAKG,QAAN,UAAc,cAAC,EAAD,CAAWT,KAAMD,EAAIW,QAAQC,kBAC3C,cAACL,EAAA,EAAKG,QAAN,UAAc,cAACG,EAAA,EAAD,CAAMC,MAAM,SAASC,KAAK,KAA1B,SAAgCf,EAAIpB,eAJ9CyB,SC4DLW,EA3DL,WACR,MAA0C/E,mBAAS,GAAnD,mBAAOgF,EAAP,KAAsBC,EAAtB,KACA,EAA+BjF,qBAA/B,mBAAOuD,EAAP,KAAgBC,EAAhB,KAEM0B,EAAYC,KAAKC,KAAKJ,EADd,GAERK,EAAQC,cAERC,GADSnF,cACS,SAACoF,GACvBC,EAA2B,EAAXD,EAAEE,SALN,KAQRD,EAAe,uCAAG,WAAO7C,EAAOC,GAAd,iBAAAnC,EAAA,sEACCC,EAAQC,IAAR,0BAA+BgC,EAA/B,kBAA+CC,IADhD,OAChBhC,EADgB,OAEhB8E,EAAe9E,EAASC,KAAK8E,QAAQnD,IAAtB,uCAA0B,WAAMQ,GAAN,SAAAvC,EAAA,sEAAgBC,EAAQC,IAAIqC,EAAG4C,KAA/B,mFAA1B,uDACrB3C,QAAQC,IAAIwC,GACTvC,MAAK,SAAAC,GAAI,OAAEA,EAAKZ,KAAI,SAAAa,GAAM,OAAEA,EAAOxC,WACnCsC,MAAK,SAAAG,GAAQ,OAAEC,EAAYD,MAC9B0B,EAAiBpE,EAASC,KAAKgF,OANT,2CAAH,wDA4BrB,OAHAC,qBAAU,WACRN,EAAgB,EAlCJ,KAmCZ,IAEA,eAACO,EAAA,EAAD,CAAWlB,KAAK,KAAhB,UACE,eAACmB,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYzC,YAAaA,OAE3B,cAAC0C,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,IAAN,CAAUC,KAAM,EAAhB,+BAEGhB,GAAS,MAEZ,cAACc,EAAA,EAAKC,IAAN,CAAUC,KAAM,EAAhB,SA9BJ,qCACE,cAAC,EAAD,CAAW9C,SAAUA,IACrB,cAAC,IAAD,CACI+C,WAAW,MACXC,UAAU,IACVC,cAAc,IACdC,aAAclB,EACdmB,UAAWxB,EACXyB,mBAAoB,aACpBC,gBAAiB,SACjBC,mBAAoB,kB,2BCRjBC,EA7BO,SAAA1E,GACpB,MAA4BpC,qBAA5B,mBAAO+G,EAAP,KAAeC,EAAf,KACMC,EAAWC,cASjB,OARAnB,qBAAW,WACT,IAAMoB,EAAS,uCAAG,4BAAAzG,EAAA,sEACGC,EAAQC,IAAR,kBAAuBqG,EAASjG,MAAMD,KADzC,OACVD,EADU,OAEhBkG,EAAUlG,GAFM,2CAAH,qDAIXmG,EAASjG,OACbmG,MACA,CAACF,IAED,eAAC,IAAD,CAAMG,UAAQ,EAAd,UACE,cAAC,IAAD,CAAOrD,IAAG,OAAEgD,QAAF,IAAEA,OAAF,EAAEA,EAAQjG,KAAK4D,QAAQC,cAAeG,KAAK,WACrD,eAAC,IAAKuC,QAAN,WAEA,cAAC,IAAKC,OAAN,iBAAcP,QAAd,IAAcA,OAAd,EAAcA,EAAQjG,KAAK6B,OAC3B,cAAC,IAAK4E,YAAN,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,KAAN,4BAAmBV,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQjG,KAAK4G,UAChC,eAACF,EAAA,EAAKC,KAAN,qCAA4BV,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAQjG,KAAK6G,mBACzC,eAACH,EAAA,EAAKC,KAAN,2BAAkBV,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAQjG,KAAK8G,MAAMnF,KAAI,SAACjB,EAAK4C,GAAN,OAAc,iCAAmB5C,EAAKA,KAAKmB,KAA7B,MAAWyB,qBCjB5EyD,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,WAAzB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,aAIrCC,SAASC,cAAc,Y","file":"static/js/main.5aa72a0d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://pokeapi.co/api/v2/',\n});\n","import React, { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Search } from 'semantic-ui-react';\r\nimport pokeapi from '../api/pokeapi';\r\nimport { TextInput } from '@mantine/core';\r\nimport { useForm } from '@mantine/form';\r\n\r\nconst SearchBar = ({ onSubmit }) =>{\r\n  const [term, setTerm] = useState(\"\");\r\n  const [search, setSearch] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n    onSearchSubmit(form.values.term);\r\n  };\r\n  \r\n  const form = useForm({\r\n    initialValues:{\r\n      term:'',\r\n    },\r\n  });\r\n  const onSearchSubmit = async term => {\r\n    try{\r\n      const response = await pokeapi.get(`/pokemon/${term}`);\r\n      navigate(`/PokemonDetail/${response.data.id}`, {state : { id: response.data.id }});\r\n    }\r\n    catch(error){\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  const handleChange = e =>{\r\n    setSearch({title: e.target.value});\r\n    form.setFieldValue('term', e.currentTarget.value);\r\n  }\r\n  return(\r\n    <form onSubmit={(e) => onFormSubmit(e)}>\r\n      <TextInput\r\n        aria-label=\"Search\"\r\n        type=\"search\"\r\n        placeholder=\"Search...\"\r\n        value={form.values.term}\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\nexport default SearchBar;","import React from 'react';\n//import Select from 'react-select';\nimport {Dropdown} from 'semantic-ui-react'; \nimport pokeapi from '../api/pokeapi';\nconst options = [\n  {key:'Female',text:'Female',value:1},\n  {key:'Male',text:'Male',value:2},\n  {key:'Genderless',text:'Genderless',value:3}\n];\n\nconst PokeSelect = (props)=>{\n  const change = (option)=>{\n    onSelectChange(option);\n  }\n  const paginate = (array,offset,limit) =>{\n    return array.slice(offset*limit,offset*limit+limit);\n  }\n  \n  const onSelectChange = async (option) =>{\n    const response = await pokeapi.get(`/gender/${option.value}`);\n    const pokemonURL = response.data.pokemon_species_details.map((value)=>`${value.pokemon_species.name}`);\n    const pokeSelectUrlList = paginate(pokemonURL,0,10);\n    const getImageUrl = pokeSelectUrlList.map(async el=>await pokeapi.get(`/pokemon/${el}`));\n    Promise.all(getImageUrl)\n      .then(poke=>poke.map(result=>result.data))\n      .then(pokeData=>props.setPokeData(pokeData));\n  }\n  return (\n    <Dropdown\n      placeholder=\"Select Pokemon Type\"\n      fluid\n      selection\n      options={ options } \n      onChange={ (option, value) => change(value) }\n    />\n  )\n}\n\nexport default PokeSelect;\n","import React from 'react';\nimport { Image } from '@mantine/core';\n// import {Image} from 'semantic-ui-react';\n\nconst ImageCard = props=>{\n  return (\n    <div>\n      <Image src={props.urls}/>\n    </div>\n  )\n}\n\nexport default ImageCard;\n","import ImageCard from './ImageCard';\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/styles.css';\nimport { SimpleGrid, Card, Text } from '@mantine/core';\nconst FrontPage = props =>{\n  return (\n    <SimpleGrid cols={3}>\n      {props.pokeData && props.pokeData.map((src,index)=>{\n        return (\n          <div key={index} >\n            <Link to={`/PokemonDetail/${src.id}`} state={{id:src.id}}>\n              <Card p=\"lg\" shadow=\"sm\">\n                <Card.Section><ImageCard urls={src.sprites.front_default} /></Card.Section>\n                <Card.Section><Text align=\"center\" size=\"xs\">{src.name}</Text></Card.Section>\n              </Card>\n            </Link>\n          </div>\n        )\n      })}\n    </SimpleGrid>\n  )\n};\n\nexport default FrontPage;\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport pokeapi from '../api/pokeapi';\r\nimport SearchBar from './SearchBar';\r\nimport PokeSelect from './PokeSelect';\r\nimport { useOutlet } from 'react-router-dom';\r\nimport { Grid, Container, Stack } from '@mantine/core';\r\nimport { /*Container, Grid,*/ Segment, Divider } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport FrontPage from './FrontPage';\r\nconst App=() => {\r\n  const [responseCount, setResponseCount] = useState(0);\r\n  const [pokeData,setPokeData] = useState();//data storage from api\r\n  const limit = 6;\r\n  const pagecount = Math.ceil(responseCount/limit);\r\n  const child = useOutlet();\r\n  let navigate = useNavigate();\r\n  const handlePageClick = (d)=>{\r\n    getPokeImageUrl(d.selected*6,limit);\r\n  } \r\n\r\n  const getPokeImageUrl = async (offset,limit)=>{ // too many api request need redux\r\n    const response = await pokeapi.get(`/pokemon?offset=${offset}&limit=${limit}`);\r\n    const PokeImageUrl = response.data.results.map(async el=>await pokeapi.get(el.url));\r\n    Promise.all(PokeImageUrl)\r\n      .then(poke=>poke.map(result=>result.data))\r\n      .then(pokeData=>setPokeData(pokeData))\r\n    setResponseCount(response.data.count);\r\n  }\r\n  const renderFrontPage = () =>{\r\n    return(\r\n      <>\r\n        <FrontPage pokeData={pokeData} />\r\n        <ReactPaginate\r\n            breakLabel=\"...\"\r\n            nextLabel=\">\"\r\n            previousLabel=\"<\"\r\n            onPageChange={handlePageClick}\r\n            pageCount={pagecount}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n            pageRangeDisplayed={1}\r\n          />\r\n      </>\r\n    )\r\n  }\r\n  useEffect(()=>{\r\n    getPokeImageUrl(0,limit);\r\n  },[])\r\n  return (\r\n    <Container size=\"xs\">\r\n      <Stack>\r\n        <SearchBar />\r\n        <PokeSelect setPokeData={setPokeData} />\r\n      </Stack>\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Col span={6}>\r\n            Welcome to Pokedex\r\n            {child || ''}\r\n          </Grid.Col>\r\n          <Grid.Col span={6}>\r\n            {renderFrontPage()}\r\n          </Grid.Col >\r\n        </Grid>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n}\r\nexport default App;","import React,{ useState, useEffect } from 'react';\nimport { Image, Card, List } from 'semantic-ui-react';\nimport { useLocation } from 'react-router-dom';\nimport pokeapi from '../api/pokeapi';\n\nconst PokemonDetail = props =>{\n  const [detail, setDetail] = useState();\n  const location = useLocation();\n  useEffect (()=>{\n    const getDetail = async() => {\n      const data = await pokeapi.get(`pokemon/${location.state.id}`);\n      setDetail(data);\n    }\n    if(!location.state) return;\n    getDetail();\n  },[location])\n  return (\n    <Card centered>\n      <Image src={detail?.data.sprites.front_default} size='medium'/>\n      <Card.Content>\n\n      <Card.Header>{detail?.data.name}</Card.Header>\n      <Card.Description>\n        <List>\n          <List.Item>height:{detail?.data.height}</List.Item>\n          <List.Item>base experience:{detail?.data.base_experience}</List.Item>\n          <List.Item>types:{detail?.data.types.map((type,index)=><span key={index}>{type.type.name} </span>)}</List.Item>\n        </List>\n      </Card.Description> \n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default PokemonDetail;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport FrontPage from './components/FrontPage';\nimport ImageCard from './components/ImageCard';\nimport PokemonDetail from './components/PokemonDetail';\nimport { Route,Routes } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Routes>\n      <Route path=\"/\" element={<App />} >\n        <Route path=\"/FrontPage\" element={<FrontPage />} />\n        <Route path=\"/PokemonDetail/:index\" element={<PokemonDetail />} />\n        <Route path=\"/Search\" element={<ImageCard />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>, \n  document.querySelector('#root')\n);\n"],"sourceRoot":""}